option(WITH_ZLIB "Build HDF5 with ZLIB" YES)
option(WITH_SZIP "Build HDF5 with SZIP" YES)

set(HDF5_EXTERNALLY_CONFIGURED YES)
set(HDF5_DISABLE_COMPILER_WARNINGS YES)

set(HDF5_INSTALL_BIN_DIR bin)
set(HDF5_INSTALL_LIB_DIR lib)
set(HDF5_INSTALL_INCLUDE_DIR include/hdf5)
set(HDF5_INSTALL_DATA_DIR include/hdf5)
set(HDF5_INSTALL_CMAKE_DIR ${PACKAGE_CONFIG_DIR})

if (NOT CMAKE_BUILD_TYPE MATCHES RELEASE)
    set(HDF5_INSTALL_NO_DEVELOPMENT YES)
endif()
set(HDF5_BUILD_CPP_LIB YES)
set(HDF5_BUILD_FORTRAN YES)
set(HDF5_BUILD_TOOLS YES)
set(HDF5_BUILD_HL_LIB YES)
set(HDF5_ENABLE_PARALLEL NO)
set(HDF5_NO_PACKAGES YES)
# Sets the export set name
set(HDF5_EXPORTED_TARGETS hdf5-config)

if (WITH_SZIP)
    find_package(SZIP ${SZIP_VERSION} CONFIG REQUIRED)
    get_property(TEMP TARGET szip PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
    message(STATUS "szip found: ${SZIP_FOUND}, temp: ${TEMP}, SZIP_DIR=${SZIP_DIR}")
    set(SZIP_USE_EXTERNAL YES)
    set(HDF5_ENABLE_SZIP_SUPPORT YES)
    set(HDF5_ENABLE_SZIP_ENCODING YES)
endif()
if (WITH_ZLIB)
    find_package(ZLIB ${ZLIB_VERSION} REQUIRED)
    set(ZLIB_USE_EXTERNAL YES)
    set(HDF5_ENABLE_Z_LIB_SUPPORT YES)
endif()

if (BUILD_TESTS)
    set(BUILD_TESTING ON)
endif()
