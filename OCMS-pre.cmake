set(HDF5_EXTERNALLY_CONFIGURED YES)
set(HDF5_DISABLE_COMPILER_WARNINGS YES)

if (HDF5_EXTERNALLY_CONFIGURED)
    set(HDF5_INSTALL_BIN_DIR bin)
    set(HDF5_INSTALL_LIB_DIR lib)
    set(HDF5_INSTALL_INCLUDE_DIR include/hdf5)
    set(HDF5_INSTALL_DATA_DIR include/hdf5)
    set(HDF5_INSTALL_CMAKE_DIR ${PACKAGE_CONFIG_DIR})
    
    if (NOT CMAKE_BUILD_TYPE MATCHES DEBUG)
        set(HDF5_INSTALL_NO_DEVELOPMENT YES)
    endif()
    set(HDF5_BUILD_FORTRAN NO)
    set(HDF5_ENABLE_PARALLEL NO)
    set(HDF5_BUILD_CPP_LIB YES)
    
    if (HDF5_ENABLE_SZIP_SUPPORT)
        find_package(SZIP ${SZIP_VERSION} CONFIG REQUIRED)
        get_property(TEMP TARGET szip PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
        message(STATUS "szip found: ${SZIP_FOUND}, temp: ${TEMP}, SZIP_LIBRARIES: ${SZIP_LIBRARIES}, SZIP_INCLUDE_DIRS: ${SZIP_INCLUDE_DIRS}, SZIP_INCLUDE_DIR: ${SZIP_INCLUDE_DIR}")
        set(SZIP_USE_EXTERNAL YES)
    endif()
    if (HDF5_ENABLE_Z_LIB_SUPPORT)
        find_package(ZLIB ${ZLIB_VERSION} REQUIRED)
        set(ZLIB_USE_EXTERNAL YES)
    endif()

    set(HDF5_EXPORTED_TARGETS hdf5-config)
    
    if (BUILD_TESTS)
        set(BUILD_TESTING ON)
    endif()
endif()
